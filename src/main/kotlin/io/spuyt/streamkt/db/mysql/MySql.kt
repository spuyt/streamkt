package io.spuyt.streamkt.db.mysql

import io.spuyt.streamkt.consumer.ConsumerState
import io.spuyt.streamkt.db.StreamDatabase
import io.spuyt.streamkt.event.EventMessage

/*

EventMessages need to be saved with the following fields:

Table: events
  id                    : Long    -- generated by MySQL
  eventId               : String
  creationTimeUnixSec   : Long
  deviceId              : String
  locationId            : String
  appVersion            : String
  eventType             : String
  eventVersion          : String
  eventTimeUnixSec      : String
  payloadJson           : String


ConsumerState need to be saved with the following fields:

Table: consumerStates
  id            : Long    -- generated by MySQL
  consumerId    : String
  cursor        : Long

*/


object MySql : StreamDatabase {


    fun connect() {

    }

    fun createDatabases() {

    }





    override suspend fun insert(event: EventMessage): Long {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }

    override suspend fun getAfter(cursor: Long, batchSize: Int): List<EventMessage> {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }

    override suspend fun getAfterSelection(cursor: Long, eventTypes: List<String>, eventVersions: List<String>, batchSize: Int): List<EventMessage> {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }

    override suspend fun getConsumerState(consumerId: String): ConsumerState {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }

    override suspend fun saveConsumerState(consumerState: ConsumerState) {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }
}